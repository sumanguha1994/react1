import React, { Component } from 'react';
import PropTypes from 'prop-types';
import ReactDOM, { render } from 'react-dom';   
import logo from './logo.svg';
import './App.css';

class App extends React.Component {
  constructor(props) {
    super(props);
    this.callRefInput = React.createRef();
  }
  render() {
    return (
      <Customer ref={this.callRefInput} />
    );
  }
}

function Customer(props)
{
  let callRefInput = React.createRef();
  function handelClick()
  {
    alert(callRefInput.current.value);
    callRefInput.current.focus();
  }
  return (<div>
    <h2>Adding Ref to Class Component</h2> 
    <input type="text" ref={callRefInput} />
    <input type="button" value="focus input" onClick={handelClick} />
  </div>);
}
export default App;
/*
we are adding a ref to store the reference to a class component.

A key is a unique identifier. In React, it is used to identify which items have changed, 
updated, or deleted from the Lists. It is useful when we dynamically created components 
or when the users alter the lists. It also helps to determine which components in a 
collection needs to be re-rendered instead of re-rendering the entire set of components every time.

Keys should be given inside the array to give the elements a stable identity. 
The best way to pick a key as a string that uniquely identifies the items in the list. 
It can be understood with the below example.
*/

