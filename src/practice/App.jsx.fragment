import React, { Component, Fragment } from 'react';
import PropTypes from 'prop-types';
import ReactDOM, { render } from 'react-dom';   
import logo from './logo.svg';
import './App.css';

const data = [
  {id: 1, "name": "test", "url": "google.com", "description": "hi this is test url"}, 
  {id: 2, "name": "test2", "url": "yahoo.com", "description": "hi this is test2 url"}]
class App extends React.Component {
  render() {
    return (
      //best practice to using React.Fragment
      /* <React.Fragment>
            <h2>Hello world !!</h2>
            <h3>Welcome here.....</h3>
         </React.Fragment> */

      //It looks like empty tag in which we can use of '<>' and '' instead of the 'React.Fragment'.
      /*<> 
        <h2>Hello world !!</h2>
        <h3>Welcome here.....</h3>
      </>*/
      
      <Show items = {data} />
    );
  }
}

function Show(props) {
  //Key is the only attributes that can be passed with the Fragments.
  return(
    <Fragment>
      {props.items.map(item => (
        // Without the 'key', React will give a key warning  
        <React.Fragment key={item.id} >
          <h2>{item.name}</h2>
          <p>{item.url}</p>
          <p>{item.description}</p>
        </React.Fragment>
      ))}
    </Fragment>
  )
}
export default App;
/*
In React, whenever you want to render something on the screen, 
you need to use a render method inside the component. This render 
method can return single elements or multiple elements. The render 
method will only render a single root node inside it at a time. However, 
if you want to return multiple elements, the render method will require a 'div' 
tag and put the entire content or elements inside it. This extra node to the DOM 
sometimes results in the wrong formatting of your HTML output and also not loved 
by the many developers. 
*/

/*
The main reason to use Fragments tag is:
1.It makes the execution of code faster as compared to the div tag.
2.It takes less memory.
*/

