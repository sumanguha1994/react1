import React, { Component } from 'react';
import PropTypes from 'prop-types';
import ReactDOM, { render } from 'react-dom';   
import logo from './logo.svg';
import './App.css';

class App extends React.Component {
  constructor(props) {
    super(props);
    this.callRef = React.createRef();
    this.addingRefInput = this.addingRefInput.bind(this);
  }
  addingRefInput(){
    alert(this.callRef.current.value);
    this.callRef.current.focus();
  }
  render() {
    return (
      <div>
        <h2>Adding Ref to DOM element</h2>  
        <input type="text" ref={this.callRef} />  
        <input type="button" value="Add text input" onClick={this.addingRefInput} />  
      </div>
    )
  }
}

export default App;
/*
A key is a unique identifier. In React, it is used to identify which items have changed, 
updated, or deleted from the Lists. It is useful when we dynamically created components 
or when the users alter the lists. It also helps to determine which components in a 
collection needs to be re-rendered instead of re-rendering the entire set of components every time.

Keys should be given inside the array to give the elements a stable identity. 
The best way to pick a key as a string that uniquely identifies the items in the list. 
It can be understood with the below example.
*/

